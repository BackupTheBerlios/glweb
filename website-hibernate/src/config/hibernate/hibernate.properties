#
# $Id: hibernate.properties,v 1.2 2003/10/31 06:50:46 paxson Exp $
#

# -------------------------------------------------------------------
# Query Language.
# -------------------------------------------------------------------

## define query language constants / function names
hibernate.query.substitutions true 1, false 0, yes 'Y', no 'N'

## package imports

hibernate.query.imports com.siwi.website.ejb.model

# -------------------------------------------------------------------
# Platforms.
# -------------------------------------------------------------------

## JLCP Database Properties
#hibernate.connection.datasource java:/MySqlDS
hibernate.connection.driver_class com.mysql.jdbc.Driver
hibernate.connection.url jdbc:mysql://localhost:3306/website?useUnicode=true&amp;characterEncoding=Big5
hibernate.connection.username website
hibernate.connection.password website

hibernate.use_outer_join true
hibernate.show_sql false
hibernate.dialect net.sf.hibernate.dialect.MySQLDialect

## Straight JDBC Connection - Not Used But Here For Reference
#hibernate.connection.driver_class org.postgresql.Driver
#hibernate.connection.url jdbc:postgresql://localhost/jlcp
#hibernate.connection.username jlcp
#hibernate.connection.password jlcp

# -------------------------------------------------------------------
# Transaction API.
# -------------------------------------------------------------------

## the Transaction API abstracts application code from the underlying JTA or JDBC transactions

# Transcation Factory Class
hibernate.transaction.factory_class net.sf.hibernate.transaction.JDBCTransactionFactory

# JTA Transaction Manager Lookup Class
hibernate.transaction.manager_lookup_class 

# -------------------------------------------------------------------
# JNDI.
# -------------------------------------------------------------------

## Hibernate uses JNDI to bind a name to a SessionFactory and to look up the JTA UserTransaction;
## if hibernate.jndi.* are not specified, Hibernate will use the default InitialContext() which
## is the best approach in an application server

#file system
#hibernate.jndi.class com.sun.jndi.fscontext.RefFSContextFactory
#hibernate.jndi.url file:/

#WebSphere
#hibernate.jndi.class com.ibm.websphere.naming.WsnInitialContextFactory
#hibernate.jndi.url iiop://localhost:900/

